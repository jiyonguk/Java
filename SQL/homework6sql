--1 마당서점의고객이요구하는다음질문에대해SQL 문을작성하시오.
--(5) 박지성이구매한도서의출판사수

select count(DISTINCT publisher)
from book join orders
using(bookid)
where custid = (select custid 
                from customer
                where name = '박지성');

--(6) 박지성이구매한도서의이름, 가격, 정가와판매가격의차이

select bookname, price , price - saleprice
from book join orders
using(bookid)
where custid = (select custid
                from customer
                where name = '박지성');


--(7) 박지성이구매하지않은도서의이름

select bookname
from book
where bookname not in(select bookname
                        from book join orders
                        using(bookid)
                        where custid = (select custid 
                                        from customer
                                        where name = '박지성'));
                
select bookname
from book
where bookid not in(
    select bookid
    from orders join customer
    using(custid)
    where name = '박지성');

--2 마당서점의운영자와경영자가요구하는다음질문에대해SQL 문을작성하시오.
--(8) 주문하지않은고객의이름(부속질의사용)
select name
from customer
where custid not in(select custid 
                    from orders);
--(9) 주문금액의총액과주문의평균금액
select sum(saleprice), avg(saleprice)
from orders;
--(10) 고객의이름과고객별구매액
select name, sum(saleprice)
from orders join customer
using(custid)
group by name;

--(11) 고객의이름과고객이구매한도서목록
select name, bookname
from (select *
        from orders  join customer 
        using(custid)) join book         
using(bookid)
order by name;

select name, bookname
from orders join customer
using(custid)
join book
using(bookid);

--(12) 도서의가격(Book 테이블)과판매가격(Orders 테이블)의차이가가장많은주문

select *
from book join orders
using(bookid)
where price - saleprice = (
    select max (price - saleprice)
    from book join orders
    using(bookid))
    ;

--(13) 도서의판매액평균보다자신의구매액평균이더높은고객의이름

select name
from (select name, avg(saleprice) avg 
        from orders join customer 
        using(custid)
        group by name) 
where avg > (select avg(saleprice) 
            from orders)
;

select name, avg(saleprice)
from orders join customer
using(custid)
group by name
having avg(saleprice) > (select avg(saleprice) from orders)
;


--3. 마당서점에서 다음의 심화된 질문에 대해 SQL 문을 작성하시오.
--(1) 박지성이 구매한 도서의 출판사와 같은 출판사에서 도서를 구매한 고객의 이름

select name
from customer
where custid in(select distinct custid
                from orders join book
                using(bookid)
                where publisher in(select publisher
                                    from book
                                    where  bookid in(select bookid 
                                                    from orders join customer 
                                                    using(custid) 
                                                    where name = '박지성'))) and name != '박지성'
;


select name
from orders join customer
using(custid)
join book
using(bookid)
where publisher in(select publisher
    from orders join customer
    using(custid)
    join book
    using(bookid)
    where name = '박지성') and name !='박지성';
;


--(2) 두 개 이상의 서로 다른 출판사에서 도서를 구매한 고객의 이름

select name 
from (select name, bookid from orders join customer using(custid)) join book
using(bookid)
group by name
having count(distinct publisher)>=2;



select name
from book join orders
using (bookid)
join customer
using(custid)
group by name
having count(distinct publisher)>=2;